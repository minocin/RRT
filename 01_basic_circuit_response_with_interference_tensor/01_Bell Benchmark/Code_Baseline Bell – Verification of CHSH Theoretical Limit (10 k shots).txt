# ===== Baseline Bell – Verification of CHSH Theoretical Limit (10 k shots) =====
!pip -q install "qiskit~=0.45" "qiskit-aer~=0.13"

from math import pi
import time
from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator

SHOTS = 10_000
sim    = AerSimulator()

A0, A1 = 0, pi / 2
B0, B1 = pi / 4, -pi / 4

def bell_counts(th_a, th_b, shots):
    qc = QuantumCircuit(2)
    qc.h(0); qc.cx(0, 1)
    qc.ry(th_a, 0); qc.ry(th_b, 1)
    qc.measure_all()
    tqc = transpile(qc, sim)
    result = sim.run(tqc, shots=shots).result()
    return result.get_counts()

def exp_zz(cnt):
    pos = cnt.get('00', 0) + cnt.get('11', 0)
    neg = cnt.get('01', 0) + cnt.get('10', 0)
    return (pos - neg) / (pos + neg)

def chsh(shots=SHOTS):
    e00 = exp_zz(bell_counts(A0, B0, shots // 4))
    e01 = exp_zz(bell_counts(A0, B1, shots // 4))
    e10 = exp_zz(bell_counts(A1, B0, shots // 4))
    e11 = exp_zz(bell_counts(A1, B1, shots // 4))
    return e00 + e01 + e10 - e11

t0 = time.time()
S  = chsh()
print(f"CHSH = {S:.8f}   (theoretical 2√2 = 2.82842712)")
print(f"runtime {time.time() - t0:.2f} s for {SHOTS} shots")
# ===============================================================
